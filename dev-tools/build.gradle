group 'com.github.yaming.arch-skeleton'
version '1.0-SNAPSHOT'

apply plugin: 'maven'
apply plugin: 'java'

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'

configurations {
    mybatisGenerator
}

dependencies {
    compile 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    compile 'tk.mybatis:mapper:3.3.8'
    compile project(':common')
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.8'
    mybatisGenerator 'org.slf4j:slf4j-api:1.7.5'
    mybatisGenerator files('../lib/dev-tools-1.0.jar')
}

def getDbProperties = {
    def properties = new Properties()
    file("../web-home/src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }

    properties;

}

task ensureIfDevToolsJarNotExist {
    if (!file('../lib/dev-tools-1.0.jar').exists()) {
        delete ('build/libs/dev-tools-1.0-SNAPSHOT.jar')
    }
}

jar.doLast {
    copy {
        from('build/libs') {
            include 'dev-tools-1.0-SNAPSHOT.jar'
        }
        into '../lib'
        rename 'dev-tools-1.0-SNAPSHOT.jar','dev-tools-1.0.jar'
    }
    println(':dev-tools jar was copied to /lib/dev-tools-1.0.jar')
}

task mybatisGenerate(dependsOn: [':dev-tools:ensureIfDevToolsJarNotExist',':dev-tools:jar']) << {

    def properties = getDbProperties()

    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}